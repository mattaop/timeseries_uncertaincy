import numpy as np
import matplotlib.pyplot as plt


def plot_forecast(mean, uncertainty, holdout_y, last_day, exp_smooth):
    x = np.linspace(1, len(holdout_y), len(holdout_y))
    plt.plot(x, holdout_y, color='green', label='True')
    # plt.plot(x, last_day, color='blue', label='Last_day')
    plt.plot(x, exp_smooth, color='red', label='Exponential_smoothing')
    plt.plot(x, mean, color='orange', label='LSTM')

    plt.title('AveragePrice ORGANIC Albany')
    plt.fill_between(x,
                     mean - 1.28 * uncertainty,
                     mean + 1.28 * uncertainty,
                     alpha=0.5, edgecolor='#CC4F1B', facecolor='#FF9848', label='80%-PI')
    plt.fill_between(x,
                     mean - 1.96 * uncertainty,
                     mean + 1.96 * uncertainty,
                     alpha=0.2, edgecolor='#CC4F1B', facecolor='#FF9848', label='95%-PI')
    plt.xlabel('Weeks')
    plt.ylabel('')
    plt.legend()
    plt.show()


def plot_95_coverage(data):
    # Airpassengers
    if data == 'airpassengers':
        rnn_95_pi = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        lstm_95_pi = [1.0, 1.0, 1.0, 0.99375, 0.96875, 0.94375, 0.95, 0.93125, 0.925, 0.9375, 0.9, 0.9125]
        cnn_95_pi = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        arima_95_pi = [0.9375, 1.0, 0.9375, 0.9375, 0.9375, 0.9375, 0.9375, 1.0, 1.0, 1.0, 1.0, 1.0]
        es_95_pi = [0.9375, 0.875, 0.9375, 0.9375, 0.875, 0.8125, 0.875, 0.8125, 0.75, 0.8125, 0.8125, 0.875]
    elif data == 'avocado':
        rnn_95_pi = [0.8527336860670185, 0.7641093474426803, 0.7482363315696646, 0.7513227513227512, 0.7685185185185185,
                     0.7861552028218689, 0.7980599647266309, 0.822751322751322, 0.8461199294532619, 0.8664021164021156,
                     0.8827160493827146, 0.8950617283950607]
        lstm_95_pi = [0.8853615520282181, 0.8042328042328035, 0.7808641975308634, 0.7870370370370366, 0.7896825396825388,
                      0.7998236331569659, 0.8139329805996468, 0.8377425044091706, 0.8527336860670187, 0.8668430335096994,
                      0.8655202821869482, 0.8558201058201048]
        cnn_95_pi = [0.8509700176366835, 0.8531746031746023, 0.8108465608465603, 0.8104056437389769, 0.8126102292768956,
                     0.821869488536155, 0.8536155202821867, 0.8738977072310405, 0.884479717813051, 0.9047619047619041,
                     0.9237213403880062, 0.9365079365079358]
        arima_95_pi = [0.8787477954144611, 0.8399470899470894, 0.8196649029982355, 0.8090828924162251,
                       0.8121693121693114, 0.8090828924162252, 0.8156966490299816, 0.8179012345679001,
                       0.8350970017636675,  0.8474426807760133, 0.8553791887125215, 0.8637566137566131]
        es_95_pi = [0.6410934744268078, 0.6970899470899466, 0.7508818342151671, 0.7980599647266312, 0.8408289241622567,
                    0.8558201058201048, 0.8725749559082887, 0.8963844797178125, 0.9197530864197524, 0.9400352733686056,
                    0.9453262786596114, 0.9523809523809519]
    elif data == 'avocado_multiple':
        rnn_95_pi = [0.9356261022927683, 0.8765432098765421, 0.8328924162257485, 0.8064373897707229, 0.809523809523809, 0.8082010582010578, 0.8068783068783065, 0.8187830687830682, 0.8355379188712516, 0.8540564373897704, 0.8690476190476184, 0.8818342151675473]
        lstm_95_pi = [0.9528218694885352, 0.9047619047619039, 0.8615520282186941, 0.8452380952380949, 0.845679012345678, 0.8470017636684297, 0.8619929453262782, 0.8761022927689589, 0.8937389770723096, 0.9157848324514982, 0.9347442680776002, 0.9506172839506163]
        cnn_95_pi = [0.9708994708994702, 0.9228395061728386, 0.8897707231040558, 0.8686067019400346, 0.8703703703703695, 0.8637566137566133, 0.8655202821869482, 0.8774250440917103, 0.8950617283950609, 0.9140211640211634, 0.9285714285714277, 0.9391534391534381]
        arima_95_pi = [0.8787477954144611, 0.8399470899470894, 0.8196649029982355, 0.8090828924162251,
                       0.8121693121693114, 0.8090828924162252, 0.8156966490299816, 0.8179012345679001,
                       0.8350970017636675, 0.8474426807760133, 0.8553791887125215, 0.8637566137566131]
        es_95_pi = [0.6410934744268078, 0.6970899470899466, 0.7508818342151671, 0.7980599647266312, 0.8408289241622567,
                    0.8558201058201048, 0.8725749559082887, 0.8963844797178125, 0.9197530864197524, 0.9400352733686056,
                    0.9453262786596114, 0.9523809523809519]

    # Oslo temperature
    else:
        rnn_95_pi = [0.9731182795698925, 0.9623655913978495, 0.9516129032258065, 0.9516129032258065, 0.946236559139785, 0.946236559139785, 0.9623655913978495, 0.967741935483871, 0.967741935483871, 0.967741935483871, 0.956989247311828, 0.956989247311828]

        lstm_95_pi = [0.9731182795698925, 0.9731182795698925, 0.967741935483871, 0.956989247311828, 0.9623655913978495, 0.9731182795698925, 0.9731182795698925, 0.9731182795698925, 0.9731182795698925, 0.9731182795698925, 0.9731182795698925, 0.967741935483871]

        cnn_95_pi = [0.967741935483871, 0.9731182795698925, 0.9623655913978495, 0.9731182795698925, 0.9623655913978495, 0.967741935483871, 0.978494623655914, 0.978494623655914, 0.978494623655914, 0.9731182795698925, 0.9731182795698925, 0.9731182795698925]

        arima_95_pi = [0.946236559139785, 0.956989247311828, 0.9408602150537635, 0.9408602150537635, 0.9408602150537635, 0.9408602150537635, 0.9408602150537635, 0.9408602150537635, 0.9408602150537635, 0.9408602150537635, 0.9408602150537635, 0.9408602150537635]

        es_95_pi = [0.9408602150537635, 0.9408602150537635, 0.9408602150537635, 0.9408602150537635, 0.946236559139785, 0.946236559139785, 0.946236559139785, 0.946236559139785, 0.946236559139785, 0.946236559139785, 0.946236559139785, 0.946236559139785]

    print('mean rnn coverage', np.mean(rnn_95_pi))
    print('mean lstm coverage', np.mean(lstm_95_pi))
    print('mean cnn coverage', np.mean(cnn_95_pi))
    print('mean arima coverage', np.mean(arima_95_pi))
    print('mean es coverage', np.mean(es_95_pi))

    t = np.linspace(1, len(rnn_95_pi), len(rnn_95_pi))
    plt.figure()
    plt.plot(t, rnn_95_pi, label='RNN')
    plt.plot(t, lstm_95_pi, label='LSTM')
    plt.plot(t, cnn_95_pi, label='CNN')
    plt.plot(t, arima_95_pi, label='SARIMA')
    plt.plot(t, es_95_pi, label='ES')
    plt.plot(t, [0.95 for _ in range(len(t))], label='95%-level')
    plt.title('95% Prediction Interval Coverage')
    if data_set == 'avocado' or 'avocado_multiple':
        plt.xlabel('Forecast horizon (weeks)')
    else:
        plt.xlabel('Forecast horizon (months)')
    plt.ylabel('Average coverage')
    plt.legend(loc=4)
    plt.show()


def plot_width(data):
    if data == 'airpassengers':
        # Airpassengers
        rnn_95_pi = [0.40180814508313933, 0.43769755796284215, 0.45517191531772666, 0.4731618785357724, 0.4888876374133444, 0.5082344559454459, 0.5309000294101611, 0.5596261851804132, 0.5870754869809852, 0.6027455376384516, 0.608357595891051, 0.6031236474304709]

        lstm_95_pi = [0.34527794042205295, 0.34628662724778964, 0.34961402139272874, 0.3554588530608979, 0.36086584023544555, 0.36803773962857084, 0.3772836922614201, 0.3943764538598623, 0.41709119286163354, 0.4339347012427249, 0.43478583458872144, 0.42934583905713125]
        cnn_95_pi = [0.4012569496922452, 0.3991064932998191, 0.40311373511816945, 0.40917679141299546, 0.41465414008789414, 0.42320166104906687, 0.43457578653509543, 0.45326689345455085, 0.4743741097400977, 0.4799814194860149, 0.4818403458917997, 0.47513232480442663]
        arima_95_pi = [0.10332720796688191, 0.14612672641132138, 0.17896795798324372, 0.20665439543971087, 0.23104663791422667, 0.2530989101056569, 0.27337806756175553, 0.29225344681104337, 0.30998159109232004, 0.3267492864507519, 0.34269754266138697, 0.35793591017010873]
        es_95_pi = [0.11755871078579672, 0.12322316412383039, 0.130485800014279, 0.13935460384952947, 0.14978418023667794, 0.16169476416110729, 0.17498931848628185, 0.1895662490453196, 0.20532746524023288, 0.22218268349558823, 0.24005116332457943, 0.25886190166367684]

    elif data == 'avocado':
        rnn_95_pi = [0.6593278477228005, 0.6681865297087202, 0.6722733382393672, 0.6765621846002555, 0.6860221586638027,
                     0.6925336179864805, 0.6945555388930387, 0.6977398006235543, 0.6954100485120007, 0.7040726568792333,
                     0.7095994539292598, 0.7080087934391678]
        lstm_95_pi = [0.7559461467316233, 0.7670553568895278, 0.7682486699587855, 0.7726684730882077,
                      0.7811756229745876, 0.7860724224752983, 0.7933670357162108, 0.8005154627150199,
                      0.8081281500463653, 0.823227994487291, 0.8347219389646177, 0.8428796177297605]
        cnn_95_pi = [0.8900881352190162, 0.890557394597957, 0.8925783175293768, 0.8937470535191998, 0.8947717978170312,
                     0.8960283827183967, 0.8931375277395217, 0.8922756493625366, 0.89211950707217, 0.8967777189478483,
                     0.9020937769151677, 0.9046534646587266]
        arima_95_pi = [0.5024089716604409, 0.6008734478337556, 0.6631297423861328, 0.7114022569738244,
                       0.7519695510906582, 0.7854390014036412, 0.8144929695599424, 0.8401902044024915,
                       0.8639750408267267, 0.8857763884399716, 0.9062291990761598, 0.9254171351044517]
        es_95_pi = [0.5139044710556537, 0.6036765732030088, 0.679491170178454, 0.746692564308133, 0.8078066532020699,
                    0.8642951709646579, 0.9171027101691065, 0.9668847383173521, 1.0141195600385293, 1.0591695878507648,
                    1.1023175927911335, 1.1437894606683765]
    elif data == 'avocado_multiple':
        rnn_95_pi =[0.6474011593569415, 0.6655092994953237, 0.6727870848958761, 0.6732031807097743, 0.6752849165570525, 0.672811428812205, 0.6695685652042457, 0.6643265554718695, 0.6596357007793091, 0.6555596926299104, 0.650355595179128, 0.6449525539184042]
        lstm_95_pi = [0.8919041308006861, 0.8854070800754448, 0.8787978965627715, 0.872540637084022, 0.8661059978904696, 0.8597873430466401, 0.8535654569043163, 0.8477867988552544, 0.8422292310902451, 0.8368786761007624, 0.8320462806310263, 0.8273910762434911]
        cnn_95_pi = [0.9628064302468246, 0.9656050012700038, 0.9661063604604784, 0.9667641025211071, 0.9664985308101035, 0.9650156433111833, 0.9630772264236387, 0.962255750312486, 0.9601573787345219, 0.9595144886588377, 0.9573838668734984, 0.9557978497352244]
        arima_95_pi = [0.5024089716604409, 0.6008734478337556, 0.6631297423861328, 0.7114022569738244,
                       0.7519695510906582, 0.7854390014036412, 0.8144929695599424, 0.8401902044024915,
                       0.8639750408267267, 0.8857763884399716, 0.9062291990761598, 0.9254171351044517]
        es_95_pi = [0.5139044710556537, 0.6036765732030088, 0.679491170178454, 0.746692564308133, 0.8078066532020699,
                    0.8642951709646579, 0.9171027101691065, 0.9668847383173521, 1.0141195600385293, 1.0591695878507648,
                    1.1023175927911335, 1.1437894606683765]
    # Oslo temperature
    else:
        rnn_95_pi = [0.25525872259702376, 0.26085111770826297, 0.26204565072506797, 0.26161606343579186, 0.2615857692467842, 0.26171757572737464, 0.26355282388617246, 0.26306589964945726, 0.2634748562387314, 0.26315819676217095, 0.2641732672362025, 0.2645957274933037]

        lstm_95_pi = [0.2529345949347112, 0.25550233429251706, 0.2563676507497771, 0.25678636461369303, 0.25707578951600035, 0.25733795773309914, 0.25718618530368986, 0.2571852611860494, 0.2576987341030339, 0.25844005244019025, 0.2586107744882461, 0.2591653726517342]

        cnn_95_pi = [0.3088054591035973, 0.3087275741041772, 0.3097973115200098, 0.30979089720801206, 0.31035714662078917, 0.311382213733544, 0.3124071657301722, 0.31241229092078604, 0.31298207017623775, 0.31347446395558914, 0.31421538421325973, 0.3146379250344686]

        arima_95_pi = [0.22027579283976917, 0.23818254140679757, 0.24115716171834745, 0.24115716162660963, 0.24115716153422914, 0.24115716144180432, 0.24115716134931348, 0.2411571612567991, 0.24115716116475913, 0.24115716107531862, 0.24115716100124293, 0.24115716092717643]

        es_95_pi = [0.22767602087620395, 0.22919484129772005, 0.23070366289452895, 0.2322026805797424, 0.23369208301498637, 0.23517205288755857, 0.23664276717198443, 0.23810439737703176, 0.2395571097791606, 0.2410010656433084, 0.24243642143183766, 0.243863329002417]

    t = np.linspace(1, len(rnn_95_pi), len(rnn_95_pi))
    plt.figure()
    plt.plot(t, rnn_95_pi, label='RNN')
    plt.plot(t, lstm_95_pi, label='LSTM')
    plt.plot(t, cnn_95_pi, label='CNN')
    plt.plot(t, arima_95_pi, label='SARIMA')
    plt.plot(t, es_95_pi, label='ES')

    plt.title('95% Prediction Interval Width')
    if data_set == 'avocado' or 'avocado_multiple':
        plt.xlabel('Forecast horizon (weeks)')
    else:
        plt.xlabel('Forecast horizon (months)')
    plt.ylabel('Width of prediction interval')
    plt.legend()
    plt.show()


def plot_mse(data):
    # Airpassengers
    if data == 'airpassengers':
        rnn_mse = [0.0014874853238852283, 0.0014718236396309072, 0.0017628405059753455, 0.0021589507559049157, 0.0020509670194033174, 0.0022909160949340516, 0.002277441350141668, 0.002579366519835563, 0.002737599142793047, 0.0030489523248703617, 0.0029688292584713824, 0.0030364255410012283]
        lstm_mse = [0.0053822502474126155, 0.005723167010064216, 0.006118849296954634, 0.006313924388180981, 0.007892719946767521, 0.009418940279032086, 0.011609767404890229, 0.013868981761580848, 0.013973104766668104, 0.014289223242590493, 0.014834096019546866, 0.014402693111596337]
        cnn_mse = [0.002778616314677634, 0.0027487858545254666, 0.0029677528133327928, 0.0031722291874587186, 0.0038330088441265115, 0.0038237165601956577, 0.0038737579854471087, 0.003911027714624708, 0.003715100570734038, 0.003612973687228812, 0.004165043948806651, 0.004971160793143822]
        arima_mse = [0.001459101508251626, 0.0014851431564817013, 0.002377161742094424, 0.003598391798290856, 0.0040570333306924325, 0.005184202815655105, 0.005199361349370495, 0.005832908220657885, 0.005118904764103982, 0.006362678038612411, 0.006009369042185754, 0.006538361048465386]
        es_mse = [0.0019487938287939314, 0.002182507802158153, 0.002274238163680796, 0.002278740249654674, 0.0028548188359302567, 0.003304235651710434, 0.0035445386297118966, 0.004942308096052683, 0.006624393255494363, 0.0070122195190343295, 0.007729119232874578, 0.00766593311362785]

    elif data == 'avocado':
        rnn_mse = [0.048497141043220386, 0.07969199183354325, 0.09561441763805256, 0.09661201576328378,
                   0.09559294099709259, 0.09502975911940198, 0.08973909723368495, 0.08152155669031023,
                   0.0693599134958643, 0.06294016487518157, 0.05616318916553811, 0.052516084793097086]
        lstm_mse = [0.05020747470534214, 0.08661299273177481, 0.09693792131063743, 0.09680833669803697,
                    0.10432450870144816, 0.10148631608201111, 0.09563150094670292, 0.08834437195656035,
                    0.07881315886774744, 0.07089271399866255, 0.07061749762247159, 0.0717488802563449]
        cnn_mse = [0.08194256153388427, 0.08071396915876249, 0.1073544312408495, 0.11276698777237237,
                   0.12012423734142164, 0.12033474076357782, 0.10268940735830553, 0.09320305819910242,
                   0.08498614252250321, 0.07441564991810862, 0.06219547863210586, 0.05622422718101421]
        arima_mse = [0.026951170176967413, 0.04851325093031427, 0.06415234702879749, 0.07700145636406414,
                     0.08665741381343652, 0.09416419900775139, 0.09809113899459801, 0.09964242086359315,
                     0.09787561446162926, 0.0948760762779495, 0.09301033353404276, 0.09416842661708698]
        es_mse = [0.07358314409939759, 0.07743436272112855, 0.0780750096022051, 0.07830258638394084,
                  0.07696649106986768, 0.08167716289468804, 0.0825945230924052, 0.08044497660575586,
                  0.07717641038584053, 0.07412604556067948, 0.07358046602604237, 0.07581436821504024]
    elif data == 'avocado_multiple':
        rnn_mse = [0.024122607165535145, 0.040380940610881585, 0.05171989293106929, 0.05971684977925941, 0.0654691451690377, 0.06989089128691009, 0.06979861225001784, 0.06637825752304545, 0.05885503466533755, 0.04975194601414553, 0.04251443828308626, 0.039128457348542416]
        lstm_mse = [0.049375613561287716, 0.06420140441706822, 0.0762724497709612, 0.08452702497334277, 0.08800303943101755, 0.08924466609512725, 0.08597001929993829, 0.08016845619495037, 0.06946817984204905, 0.05713255640302427, 0.04734305457162855, 0.042081086308984605]
        cnn_mse = [0.0469852961209068, 0.06611736993362909, 0.07893221561115696, 0.08886838682822448, 0.0947586437995974, 0.0990322467062163, 0.099381236217089, 0.09358257170511364, 0.08409258674069289, 0.07248827832396268, 0.06360491701032234, 0.059524083611953195]
        arima_mse = [0.026951170176967413, 0.04851325093031427, 0.06415234702879749, 0.07700145636406414,
                     0.08665741381343652, 0.09416419900775139, 0.09809113899459801, 0.09964242086359315,
                     0.09787561446162926, 0.0948760762779495, 0.09301033353404276, 0.09416842661708698]
        es_mse = [0.07358314409939759, 0.07743436272112855, 0.0780750096022051, 0.07830258638394084,
                  0.07696649106986768, 0.08167716289468804, 0.0825945230924052, 0.08044497660575586,
                  0.07717641038584053, 0.07412604556067948, 0.07358046602604237, 0.07581436821504024]
    else:
        # Oslo temperature

        rnn_mse = [0.0034195527963621184, 0.003884212528442182, 0.0039864187839221315, 0.004035886941171429, 0.004105193305174903, 0.004156274028395333, 0.003927535603878886, 0.003843361450430135, 0.0037770810209147992, 0.0037379913504780237, 0.003837308083322726, 0.0040349572676178416]
        lstm_mse = [0.0032338018792812395, 0.003779694080646258, 0.003908229622243048, 0.00397085340024478, 0.004014741292719145, 0.0038118657019056814, 0.003743722699695137, 0.0036464772339025154, 0.0035993427276156255, 0.003650820064676065, 0.0037676320823795298, 0.003974961912431658]
        cnn_mse = [0.0048296829745003746, 0.0048877755562323376, 0.005165825702829183, 0.00509523783468755, 0.005114495619077106, 0.004950476059761877, 0.004375378741683666, 0.00436219255021047, 0.004234670199690738, 0.004300792546306268, 0.004447821220691193, 0.004756612124991509]

        arima_mse = [0.003121216535212652, 0.0033874527932873716, 0.00338291319642894, 0.0033637887076277697, 0.003386152010626113, 0.0033855837554263623, 0.0033876602060741697, 0.003385641093385023, 0.0033500369496559214, 0.0033448058261502144, 0.0033448863663086584, 0.00334256943915136]

        es_mse = [0.0032970714200017187, 0.0033012682243538085, 0.0033008455343942356, 0.003294899087779628, 0.0033497216756809577, 0.003361121086278927, 0.003364231884889642, 0.00336208263634668, 0.0033381920722049805, 0.0033386451826431544, 0.003326237512753267, 0.003318616084926748]

    print('mean rnn mse', np.mean(rnn_mse))
    print('mean lstm mse', np.mean(lstm_mse))
    print('mean cnn mse', np.mean(cnn_mse))
    print('mean arima mse', np.mean(arima_mse))
    print('mean es mse', np.mean(es_mse))

    t = np.linspace(1, len(rnn_mse), len(rnn_mse))
    plt.figure()
    plt.plot(t, rnn_mse, label='RNN')
    plt.plot(t, lstm_mse, label='LSTM')
    plt.plot(t, cnn_mse, label='CNN')
    plt.plot(t, arima_mse, label='SARIMA')
    plt.plot(t, es_mse, label='ES')

    plt.title('MSE for sliding window prediction')
    if data_set == 'avocado' or 'avocado_multiple':
        plt.xlabel('Forecast horizon (weeks)')
    else:
        plt.xlabel('Forecast horizon (months)')
    plt.ylabel('Mean MSE at given forecast horizon')
    plt.legend()
    plt.show()


def plot_dropout_rate():
    rnn_coverage_00 = [0.9301075268817204, 0.9032258064516129, 0.9086021505376344, 0.9032258064516129, 0.9032258064516129, 0.9032258064516129, 0.9032258064516129, 0.9086021505376344, 0.9086021505376344, 0.9139784946236559, 0.9086021505376344, 0.8924731182795699]
    rnn_coverage_01 = [0.9623655913978495, 0.956989247311828, 0.946236559139785, 0.9516129032258065, 0.9516129032258065, 0.956989247311828, 0.946236559139785, 0.946236559139785, 0.9516129032258065, 0.956989247311828, 0.9516129032258065, 0.9623655913978495]
    rnn_coverage_02 = [0.9623655913978495, 0.956989247311828, 0.946236559139785, 0.9516129032258065, 0.956989247311828, 0.9516129032258065, 0.946236559139785, 0.946236559139785, 0.9516129032258065, 0.9516129032258065, 0.9516129032258065, 0.956989247311828]
    rnn_coverage_03 = [0.9623655913978495, 0.956989247311828, 0.9516129032258065, 0.9516129032258065, 0.956989247311828, 0.956989247311828, 0.946236559139785, 0.946236559139785, 0.9516129032258065, 0.9516129032258065, 0.9516129032258065, 0.9623655913978495]
    rnn_coverage_04 = [0.9623655913978495, 0.956989247311828, 0.946236559139785, 0.9516129032258065, 0.956989247311828, 0.9516129032258065, 0.946236559139785, 0.946236559139785, 0.9516129032258065, 0.956989247311828, 0.9516129032258065, 0.956989247311828]
    rnn_coverage_05 = [0.9623655913978495, 0.956989247311828, 0.946236559139785, 0.9516129032258065, 0.9516129032258065, 0.956989247311828, 0.946236559139785, 0.946236559139785, 0.9516129032258065, 0.9516129032258065, 0.9516129032258065, 0.9623655913978495]
    rnn_coverage_06 = [0.9623655913978495, 0.956989247311828, 0.946236559139785, 0.9516129032258065, 0.956989247311828, 0.9516129032258065, 0.946236559139785, 0.946236559139785, 0.9516129032258065, 0.956989247311828, 0.9516129032258065, 0.956989247311828]
    rnn_coverage_07 = [0.9623655913978495, 0.956989247311828, 0.946236559139785, 0.9516129032258065, 0.9516129032258065, 0.956989247311828, 0.946236559139785, 0.946236559139785, 0.9516129032258065, 0.9516129032258065, 0.9516129032258065, 0.9623655913978495]
    print('Mean coverage at rate 0.0', np.mean(rnn_coverage_00))
    print('Mean coverage at rate 0.1', np.mean(rnn_coverage_01))
    print('Mean coverage at rate 0.2', np.mean(rnn_coverage_02))
    print('Mean coverage at rate 0.3', np.mean(rnn_coverage_03))
    print('Mean coverage at rate 0.4', np.mean(rnn_coverage_04))
    print('Mean coverage at rate 0.5', np.mean(rnn_coverage_05))
    print('Mean coverage at rate 0.6', np.mean(rnn_coverage_06))
    print('Mean coverage at rate 0.7', np.mean(rnn_coverage_07))


def plot_80_coverage(data):
    # Airpassengers
    if data == 'airpassengers':
        rnn_pi = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        lstm_pi = [0.8625, 0.8625, 0.83125, 0.8375, 0.80625, 0.73125, 0.7, 0.68125, 0.65625, 0.6875, 0.66875, 0.65]
        cnn_pi = [0.95, 0.94375, 0.94375, 0.94375, 0.9375, 0.9375, 0.95625, 0.95, 0.95625, 0.95625, 0.94375, 0.925]
        arima_pi = [0.625, 0.6875, 0.75, 0.6875, 0.6875, 0.625, 0.75, 0.6875, 0.8125, 0.6875, 0.75, 0.8125]
        es_pi = [0.6875, 0.625, 0.625, 0.6875, 0.625, 0.6875, 0.6875, 0.625, 0.6875, 0.625, 0.5625, 0.5625]
    elif data == 'avocado':
        rnn_pi = [0.6948853615520283, 0.6208112874779538, 0.6005291005291004, 0.6018518518518516, 0.6168430335096998,
                  0.6177248677248677, 0.6424162257495589, 0.6503527336860669, 0.6746031746031745, 0.6953262786596116,
                  0.7010582010582007, 0.7032627865961196]
        lstm_pi = [0.7345679012345673, 0.6596119929453261, 0.6375661375661374, 0.6419753086419753, 0.6335978835978835,
                   0.6446208112874778, 0.6609347442680773, 0.669753086419753, 0.6860670194003524, 0.7001763668430334,
                   0.6953262786596116, 0.6913580246913573]
        cnn_pi = [0.7204585537918866, 0.725749559082892, 0.6940035273368605, 0.7028218694885361, 0.7085537918871246,
                  0.6988536155202817, 0.7178130511463843, 0.7200176366843031, 0.7235449735449732, 0.7305996472663138,
                  0.7680776014109342, 0.7848324514991175]
        arima_pi = [0.722222222222222, 0.6812169312169313, 0.6604938271604938, 0.6415343915343915, 0.6366843033509698,
                    0.6212522045855375, 0.6238977072310405, 0.642416225749559, 0.6582892416225742, 0.6626984126984127,
                    0.6856261022927689, 0.6843033509700175]
        es_pi = [0.49206349206349204, 0.5264550264550263, 0.5665784832451496, 0.5983245149911814, 0.6353615520282183,
                 0.657848324514991, 0.6794532627865961, 0.7160493827160487, 0.7495590828924159, 0.7733686067019397,
                 0.7985008818342145, 0.8051146384479714]
    elif data == 'avocado_multiple':
        rnn_pi = [0.8139329805996468, 0.7182539682539678, 0.675044091710758, 0.6657848324514988, 0.6569664902998233, 0.6455026455026455, 0.6626984126984126, 0.667548500881834, 0.6851851851851849, 0.6873897707231038, 0.702380952380952, 0.7200176366843033]
        lstm_pi = [0.8037918871252204, 0.7451499118165783, 0.724426807760141, 0.7213403880070545, 0.7310405643738973, 0.7328042328042325, 0.7522045855379184, 0.7610229276895941, 0.7813051146384479, 0.800705467372134, 0.819664902998236, 0.8337742504409165]
        cnn_pi = [0.8337742504409164, 0.7707231040564368, 0.745149911816578, 0.7328042328042327, 0.7354497354497348, 0.7341269841269837, 0.7376543209876543, 0.7513227513227508, 0.7614638447971778, 0.7689594356261021, 0.7795414462081127, 0.7821869488536153]
        arima_pi = [0.722222222222222, 0.6812169312169313, 0.6604938271604938, 0.6415343915343915, 0.6366843033509698,
                    0.6212522045855375, 0.6238977072310405, 0.642416225749559, 0.6582892416225742, 0.6626984126984127,
                    0.6856261022927689, 0.6843033509700175]
        es_pi = [0.49206349206349204, 0.5264550264550263, 0.5665784832451496, 0.5983245149911814, 0.6353615520282183,
                 0.657848324514991, 0.6794532627865961, 0.7160493827160487, 0.7495590828924159, 0.7733686067019397,
                 0.7985008818342145, 0.8051146384479714]
    else:
        # Oslo temperature

        rnn_pi = [0.8225806451612904, 0.8172043010752689, 0.8064516129032258, 0.7903225806451613, 0.7903225806451613, 0.7849462365591398, 0.8118279569892473, 0.8172043010752689, 0.8172043010752689, 0.8172043010752689, 0.8118279569892473, 0.8118279569892473]

        lstm_pi = [0.8602150537634409, 0.8118279569892473, 0.8064516129032258, 0.8064516129032258, 0.8010752688172043, 0.8172043010752689, 0.8172043010752689, 0.8172043010752689, 0.8172043010752689, 0.8225806451612904, 0.8225806451612904, 0.8064516129032258]
        cnn_pi = [0.8333333333333334, 0.8387096774193549, 0.8333333333333334, 0.8225806451612904, 0.8387096774193549, 0.8548387096774194, 0.8817204301075269, 0.8924731182795699, 0.8924731182795699, 0.8870967741935484, 0.8709677419354839, 0.8602150537634409]

        arima_pi = [0.8064516129032258, 0.8279569892473119, 0.8279569892473119, 0.8279569892473119, 0.8279569892473119, 0.8279569892473119, 0.8279569892473119, 0.8279569892473119, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334]

        es_pi = [0.8118279569892473, 0.8118279569892473, 0.8118279569892473, 0.8172043010752689, 0.8172043010752689, 0.8172043010752689, 0.8172043010752689, 0.8172043010752689, 0.8172043010752689, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334]

    print('mean rnn coverage', np.mean(rnn_pi))
    print('mean lstm coverage', np.mean(lstm_pi))
    print('mean cnn coverage', np.mean(cnn_pi))
    print('mean arima coverage', np.mean(arima_pi))
    print('mean es coverage', np.mean(es_pi))

    t = np.linspace(1, len(rnn_pi), len(rnn_pi))
    SMALL_SIZE = 8
    MEDIUM_SIZE = 10
    BIGGER_SIZE = 22

    plt.figure()
    plt.plot(t, rnn_pi, label='RNN')
    plt.plot(t, lstm_pi, label='LSTM')
    plt.plot(t, cnn_pi, label='CNN')
    plt.plot(t, arima_pi, label='SARIMA')
    plt.plot(t, es_pi, label='ES')
    plt.plot(t, [0.80 for _ in range(len(t))], label='80%-level')
    plt.title('80% Prediction Interval Coverage')
    if data_set == 'avocado' or 'avocado_multiple':
        plt.xlabel('Forecast horizon (weeks)')
    else:
        plt.xlabel('Forecast horizon (months)')
    plt.ylabel('Average coverage')
    plt.legend(loc=4)
    plt.show()


def plot_80_width(data):
    if data == 'airpassengers':
        # Airpassengers
        rnn_width = [0.26240531923796856, 0.2858433031594071, 0.2972551283707603, 0.30900367577846366, 0.3192735591270821, 0.33190821612763816, 0.34671022328826845, 0.365470161750474, 0.3833962363957454, 0.39362973886592767, 0.3972947565002782, 0.3938766677096953]
        lstm_width = [0.22548763456134074, 0.22614636881488304, 0.22831936090953717, 0.23213639383568846, 0.23566748750069916, 0.24035117690029115, 0.24638935004827434, 0.2575519698676652, 0.2723860851341281, 0.28338592734218765, 0.2839417695273283, 0.28038911938424904]
        cnn_width = [0.26204535490105807, 0.2606409752162084, 0.2632579494649271, 0.26721749643297665, 0.2707945404655635, 0.2763765949708191, 0.2838045952882256, 0.29601103246011484, 0.3097953369731251, 0.3134572535418873, 0.3146712462966855, 0.31029049783146223]
        arima_width = [0.06756202980147359, 0.09554713070111995, 0.1170208578039609, 0.1351240462026062, 0.15107327627873693, 0.16549248202622163, 0.17875231036530592, 0.19109425747146636, 0.20268606795220961, 0.21364987463777785, 0.2240778788642138, 0.23404171181787348]
        es_width = [0.07686750932124786, 0.08057129627885098, 0.08532007863852753, 0.09111907776770797, 0.09793861121441758, 0.10572652343898062, 0.11441936526823682, 0.12395070784704121, 0.13425641318081455, 0.14527744801264353, 0.15696101897587206, 0.16926069966269724]

    # Oslo temperature
    elif data == 'avocado':
        rnn_width = [0.4305814515740738, 0.43636671327916415, 0.4390356494624437, 0.44183652871853457,
                     0.4480144709641163, 0.4522668525625995, 0.45358729070565795, 0.4556668085704842,
                     0.45414533780375554, 0.4598025514313361, 0.46341188828033275, 0.46237308959292606]
        lstm_width = [0.4936791162328967, 0.5009341106217325, 0.5017134171159414, 0.5045998191596461,
                      0.5101555088813634, 0.5133534187593788, 0.5181172478146684, 0.522785608303687,
                      0.5277571592139534, 0.5376182821141495, 0.5451245315687301, 0.5504519952520888]
        cnn_width = [0.5812820474899699, 0.581588502594584, 0.5829082889987764, 0.5836715451553958, 0.5843407659213266,
                     0.585161392795688, 0.5832734875033607, 0.5827106281551256, 0.5826086576797845, 0.5856507552312474,
                     0.589122466556844, 0.5907940993689644]
        arima_width = [0.3285075691460656, 0.39289002953094543, 0.4335972325091306, 0.46516093323557456,
                       0.49168646110007613, 0.513570958358625, 0.5325683270193188, 0.5493708457402762,
                       0.5649229143477276, 0.5791780493324108, 0.5925514233828247, 0.6050977403818065]
        es_width = [0.33561108313838595, 0.39423776209176054, 0.44374933562674557, 0.48763596036449475,
                    0.5275472020911475, 0.5644376626707972, 0.5989242188859472, 0.6314349311460262, 0.662282161657815,
                    0.691702587984173, 0.7198808769248219, 0.7469645457426124]
    elif data == 'avocado_multiple':
        rnn_width = [0.42279259386575807, 0.43461831803776263, 0.43937115748302125, 0.43964289352475067, 0.4410023944862378, 0.4393870555508282, 0.43726926707216046, 0.4338459137775478, 0.43078249846812033, 0.4281206155950436, 0.42472202134147113, 0.4211935045997742]
        lstm_width = [0.5824680037882034, 0.5782250318860052, 0.5739088304083404, 0.5698224568711981, 0.5656202435203066, 0.5614937750508667, 0.5574305024681248, 0.5536566849666966, 0.5500272529568948, 0.546533012963763, 0.5433771628610784, 0.5403370293835043]
        cnn_width = [0.6287715462836407, 0.6305991845028591, 0.6309266027497002, 0.6313561485852132, 0.6311827139984347, 0.6302142976726095, 0.6289483927664578, 0.6284119185714196, 0.6270415534592796, 0.6266217068792412, 0.6252302804071826, 0.6241945141127997]
        arima_width = [0.3285075691460656, 0.39289002953094543, 0.4335972325091306, 0.46516093323557456,
                       0.49168646110007613, 0.513570958358625, 0.5325683270193188, 0.5493708457402762,
                       0.5649229143477276, 0.5791780493324108, 0.5925514233828247, 0.6050977403818065]
        es_width = [0.33561108313838595, 0.39423776209176054, 0.44374933562674557, 0.48763596036449475,
                    0.5275472020911475, 0.5644376626707972, 0.5989242188859472, 0.6314349311460262, 0.662282161657815,
                    0.691702587984173, 0.7198808769248219, 0.7469645457426124]
    else:
        rnn_width = [0.16669957394091348, 0.17035175034009012, 0.17113185353473828, 0.17085130673357835, 0.1708315227734101, 0.17091760047502016, 0.1721161298848473, 0.17179813854658435, 0.1720652122375389, 0.17185841421203002, 0.17252131737874452, 0.17279720979154525]
        lstm_width = [0.16518177628389302, 0.16685866729307236, 0.16742377191822175, 0.16769721770690157, 0.16788622988800023, 0.16805744178488108, 0.16795832509628728, 0.1679577215908894, 0.16829305084279766, 0.16877717710379775, 0.1688886690535485, 0.1692508556092958]

        cnn_width = [0.20166887125132885, 0.2016180075782382, 0.20231661160490436, 0.20231242266645688, 0.2026822182013317, 0.2033516497851716, 0.2040210061911329, 0.2040243532543909, 0.20439645399264506, 0.20471801727711947, 0.2052018835678431, 0.20547782859393868]

        arima_width = [0.144038261511031, 0.15606999226335028, 0.15807052761225246, 0.1584161438324826, 0.15847622416010834, 0.1584866796367318, 0.15848849950715743, 0.1584888162509094, 0.15848887133935968, 0.1584888808802042, 0.15848888250175763, 0.158488882742815]

        es_width = [0.14886934826025078, 0.14986244867094364, 0.15084901123928723, 0.15182916341101918, 0.15280302854429742, 0.15377072609092002, 0.1547323717673459, 0.1556880777162064, 0.15663795265894828, 0.1575821020401946, 0.15852062816436757, 0.1594536303250731]

    t = np.linspace(1, len(rnn_width), len(rnn_width))
    plt.figure()
    plt.plot(t, rnn_width, label='RNN')
    plt.plot(t, lstm_width, label='LSTM')
    plt.plot(t, cnn_width, label='CNN')
    plt.plot(t, arima_width, label='SARIMA')
    plt.plot(t, es_width, label='ES')

    plt.title('80% Prediction Interval Width')
    if data_set == 'avocado' or 'avocado_multiple':
        plt.xlabel('Forecast horizon (weeks)')
    else:
        plt.xlabel('Forecast horizon (months)')
    plt.ylabel('Width of prediction interval')
    plt.legend()
    plt.show()


if __name__ == '__main__':
    data_set = 'avocado_multiple'
    plot_95_coverage(data_set)
    plot_width(data_set)
    plot_mse(data_set)
    plot_dropout_rate()
    plot_80_coverage(data_set)
    plot_80_width(data_set)
